#!/usr/bin/env bash

# Set a reasonable umask and turn off aliases that may interfere with the operation of the script:

umask 022
unalias -a

die() {
	echo "$@"
	exit 1
}

if ! [ -r "$1" ]; then
	die "Please specify ebuild filename."
elif [ -z "$2" ]; then
	die "Please specify an action to perform."
fi

source_file() {
	# look for and source a file in the current directory if it exists; otherwise, look for it in its offical
	# canonical location (if provided as absolute path) and source it. Die if the file is not found.
	for fn in "$@"
	do
		local cwdfn="${fn##*/}"
		if [ -e "${cwdfn}" ]; then
			source "${cwdfn}"
		elif [ "${fn:0:1}" = "/" ] && [ -e "${fn}" ]; then
			source "${fn}"
		else
			die "File $fn (or local equivalent) not found. Exiting."
		fi
	done
}

source_file /usr/share/portage/config/make.globals
source_file ebuild.conf
export DISTDIR
 
try() {
	# Wonder if it will be all right with double quotes.
	if ! "$@"; then
		die "Error running command: $@";
	fi
}

pkg_setup() {
	return
}

src_clean() {
	[ -d "${WORKDIR}" ] && rm -rf "${WORKDIR}"; install -d "${WORKDIR}"; cd "${WORKDIR}"
}

src_unpack() {
	[ ! -e ${DISTDIR}/${A} ] && echo "${DISTDIR}/${A} does not exist.  Please download first." && exit 1
	try tar xf ${DISTDIR}/${A}
	echo "Unpacked ${DISTDIR}/${A}."
	[ ! -d $S ] && echo "Source directory $S specified in \$S does not exist. Exiting." && exit 1
}

src_compile() {
	# Shoudn't we drop MAKEOPTS in favor of MAKEFLAGS variable which make use by default?
	cd "$S"; try make "$MAKEOPTS"
}

src_configure() {
	cd "$S"; [ -e ./configure ] && try econf
}

src_install() {
	cd "$S"; try make DESTDIR="$IMAGEDIR" install
}

econf() {
	./configure \
		--prefix=/usr \
		--mandir=/usr/share/man \
		--infodir=/usr/share/info \
		--datadir=/usr/share \
		--sysconfdir=/etc \
		--localstatedir=/var/lib \
		--disable-dependency-tracking \
		"$@" 
}

P="${1%.ebuild}"
PV="${P##*-}"
ORIGDIR=$(pwd)
IMAGEDIR=${ORIGDIR}/temp/$P/image
export WORKDIR=${ORIGDIR}/temp/$P/work
S=$WORKDIR/$P

source_file "$1"

pkg_setup

case "${2}" in
	clean)
		src_clean
		;;
	unpack)
		src_clean
		src_unpack
		;;
	configure)
		src_clean
		src_unpack
		src_configure
		;;
	compile)
		src_clean
		src_unpack
		src_configure
		src_compile
		;;
	install|all)
		src_clean
		src_unpack
		src_configure
		src_compile
		src_install
		;;
	*)
		die "Please specify unpack, configure, compile or all as the second arg"
		;;
esac
